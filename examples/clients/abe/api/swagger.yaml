---
swagger: "2.0"
info:
  version: "1.0"
  title: "A Bit of Everything"
  contact:
    name: "gRPC-Gateway project"
    url: "https://github.com/grpc-ecosystem/grpc-gateway"
    email: "none@example.com"
schemes:
- "http"
- "https"
- "wss"
consumes:
- "application/json"
- "application/x-foo-mime"
produces:
- "application/json"
- "application/x-foo-mime"
security:
- ApiKeyAuth: []
  BasicAuth: []
- ApiKeyAuth: []
  OAuth2:
  - "read"
  - "write"
paths:
  /v1/example/a_bit_of_everything:
    post:
      tags:
      - "ABitOfEverythingService"
      operationId: "CreateBody"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/examplepbABitOfEverything"
        x-exportParamName: "Body"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/examplepbABitOfEverything"
        403:
          description: "Returned when the user does not have permission to access\
            \ the resource."
        404:
          description: "Returned when the resource does not exist."
        418:
          description: "I'm a teapot."
          schema:
            $ref: "#/definitions/examplepbNumericEnum"
  /v1/example/a_bit_of_everything/echo/{value}:
    get:
      tags:
      - "echo service"
      - "echo rpc"
      summary: "Summary: Echo rpc"
      description: "Description Echo"
      operationId: "Echo"
      parameters:
      - name: "value"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Value"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/subStringMessage"
        403:
          description: "Returned when the user does not have permission to access\
            \ the resource."
        404:
          description: "Returned when the resource does not exist."
        418:
          description: "I'm a teapot."
          schema:
            $ref: "#/definitions/examplepbNumericEnum"
        503:
          description: "Returned when the resource is temporarily unavailable."
      externalDocs:
        description: "Find out more Echo"
        url: "https://github.com/grpc-ecosystem/grpc-gateway"
  /v1/example/a_bit_of_everything/query/{uuid}:
    get:
      tags:
      - "ABitOfEverythingService"
      operationId: "GetQuery"
      parameters:
      - name: "uuid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Uuid"
      - name: "single_nested.name"
        in: "query"
        description: "name is nested field."
        required: false
        type: "string"
        x-exportParamName: "SingleNestedName"
      - name: "single_nested.amount"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "SingleNestedAmount"
      - name: "single_nested.ok"
        in: "query"
        description: " - FALSE: FALSE is false.\n - TRUE: TRUE is true."
        required: false
        type: "string"
        default: "FALSE"
        enum:
        - "FALSE"
        - "TRUE"
        x-exportParamName: "SingleNestedOk"
      - name: "float_value"
        in: "query"
        required: false
        type: "number"
        format: "float"
        x-exportParamName: "FloatValue"
      - name: "double_value"
        in: "query"
        required: false
        type: "number"
        format: "double"
        x-exportParamName: "DoubleValue"
      - name: "int64_value"
        in: "query"
        required: false
        type: "string"
        format: "int64"
        x-exportParamName: "Int64Value"
      - name: "uint64_value"
        in: "query"
        required: false
        type: "string"
        format: "uint64"
        x-exportParamName: "Uint64Value"
      - name: "int32_value"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Int32Value"
      - name: "fixed64_value"
        in: "query"
        required: false
        type: "string"
        format: "uint64"
        x-exportParamName: "Fixed64Value"
      - name: "fixed32_value"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Fixed32Value"
      - name: "bool_value"
        in: "query"
        required: false
        type: "boolean"
        format: "boolean"
        x-exportParamName: "BoolValue"
      - name: "string_value"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "StringValue"
      - name: "bytes_value"
        in: "query"
        required: false
        type: "string"
        format: "byte"
        x-exportParamName: "BytesValue"
      - name: "uint32_value"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Uint32Value"
      - name: "enum_value"
        in: "query"
        description: " - ZERO: ZERO means 0\n - ONE: ONE means 1"
        required: false
        type: "string"
        default: "ZERO"
        enum:
        - "ZERO"
        - "ONE"
        x-exportParamName: "EnumValue"
      - name: "path_enum_value"
        in: "query"
        required: false
        type: "string"
        default: "ABC"
        enum:
        - "ABC"
        - "DEF"
        x-exportParamName: "PathEnumValue"
      - name: "nested_path_enum_value"
        in: "query"
        required: false
        type: "string"
        default: "GHI"
        enum:
        - "GHI"
        - "JKL"
        x-exportParamName: "NestedPathEnumValue"
      - name: "sfixed32_value"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Sfixed32Value"
      - name: "sfixed64_value"
        in: "query"
        required: false
        type: "string"
        format: "int64"
        x-exportParamName: "Sfixed64Value"
      - name: "sint32_value"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Sint32Value"
      - name: "sint64_value"
        in: "query"
        required: false
        type: "string"
        format: "int64"
        x-exportParamName: "Sint64Value"
      - name: "repeated_string_value"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        x-exportParamName: "RepeatedStringValue"
      - name: "oneof_string"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "OneofString"
      - name: "nonConventionalNameValue"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "NonConventionalNameValue"
      - name: "timestamp_value"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "TimestampValue"
      - name: "repeated_enum_value"
        in: "query"
        description: "repeated enum value. it is comma-separated in query.\n\n - ZERO:\
          \ ZERO means 0\n - ONE: ONE means 1"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "ZERO"
          - "ONE"
        x-exportParamName: "RepeatedEnumValue"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/protobufEmpty"
        403:
          description: "Returned when the user does not have permission to access\
            \ the resource."
        404:
          description: "Returned when the resource does not exist."
        418:
          description: "I'm a teapot."
          schema:
            $ref: "#/definitions/examplepbNumericEnum"
      security: []
      externalDocs:
        description: "Find out more about GetQuery"
        url: "https://github.com/grpc-ecosystem/grpc-gateway"
      deprecated: true
  ? /v1/example/a_bit_of_everything/{float_value}/{double_value}/{int64_value}/separator/{uint64_value}/{int32_value}/{fixed64_value}/{fixed32_value}/{bool_value}/{string_value}/{uint32_value}/{sfixed32_value}/{sfixed64_value}/{sint32_value}/{sint64_value}/{nonConventionalNameValue}/{enum_value}/{path_enum_value}/{nested_path_enum_value}
  : post:
      tags:
      - "ABitOfEverythingService"
      summary: "Create a new ABitOfEverything"
      description: "This API creates a new ABitOfEverything"
      operationId: "Create"
      parameters:
      - name: "float_value"
        in: "path"
        required: true
        type: "number"
        format: "float"
        x-exportParamName: "FloatValue"
      - name: "double_value"
        in: "path"
        required: true
        type: "number"
        format: "double"
        x-exportParamName: "DoubleValue"
      - name: "int64_value"
        in: "path"
        required: true
        type: "string"
        format: "int64"
        x-exportParamName: "Int64Value"
      - name: "uint64_value"
        in: "path"
        required: true
        type: "string"
        format: "uint64"
        x-exportParamName: "Uint64Value"
      - name: "int32_value"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Int32Value"
      - name: "fixed64_value"
        in: "path"
        required: true
        type: "string"
        format: "uint64"
        x-exportParamName: "Fixed64Value"
      - name: "fixed32_value"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "Fixed32Value"
      - name: "bool_value"
        in: "path"
        required: true
        type: "boolean"
        format: "boolean"
        x-exportParamName: "BoolValue"
      - name: "string_value"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "StringValue"
      - name: "uint32_value"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "Uint32Value"
      - name: "sfixed32_value"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Sfixed32Value"
      - name: "sfixed64_value"
        in: "path"
        required: true
        type: "string"
        format: "int64"
        x-exportParamName: "Sfixed64Value"
      - name: "sint32_value"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Sint32Value"
      - name: "sint64_value"
        in: "path"
        required: true
        type: "string"
        format: "int64"
        x-exportParamName: "Sint64Value"
      - name: "nonConventionalNameValue"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "NonConventionalNameValue"
      - name: "enum_value"
        in: "path"
        required: true
        type: "string"
        enum:
        - "ZERO"
        - "ONE"
        x-exportParamName: "EnumValue"
      - name: "path_enum_value"
        in: "path"
        required: true
        type: "string"
        enum:
        - "ABC"
        - "DEF"
        x-exportParamName: "PathEnumValue"
      - name: "nested_path_enum_value"
        in: "path"
        required: true
        type: "string"
        enum:
        - "GHI"
        - "JKL"
        x-exportParamName: "NestedPathEnumValue"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/examplepbABitOfEverything"
        403:
          description: "Returned when the user does not have permission to access\
            \ the resource."
        404:
          description: "Returned when the resource does not exist."
        418:
          description: "I'm a teapot."
          schema:
            $ref: "#/definitions/examplepbNumericEnum"
  /v1/example/a_bit_of_everything/{single_nested.name}:
    post:
      tags:
      - "ABitOfEverythingService"
      operationId: "DeepPathEcho"
      parameters:
      - name: "single_nested.name"
        in: "path"
        description: "name is nested field."
        required: true
        type: "string"
        x-exportParamName: "SingleNestedName"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/examplepbABitOfEverything"
        x-exportParamName: "Body"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/examplepbABitOfEverything"
        403:
          description: "Returned when the user does not have permission to access\
            \ the resource."
        404:
          description: "Returned when the resource does not exist."
        418:
          description: "I'm a teapot."
          schema:
            $ref: "#/definitions/examplepbNumericEnum"
  /v1/example/a_bit_of_everything/{uuid}:
    get:
      tags:
      - "ABitOfEverythingService"
      operationId: "Lookup"
      parameters:
      - name: "uuid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Uuid"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/examplepbABitOfEverything"
        403:
          description: "Returned when the user does not have permission to access\
            \ the resource."
        404:
          description: "Returned when the resource does not exist."
        418:
          description: "I'm a teapot."
          schema:
            $ref: "#/definitions/examplepbNumericEnum"
    put:
      tags:
      - "ABitOfEverythingService"
      operationId: "Update"
      parameters:
      - name: "uuid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/examplepbABitOfEverything"
        x-exportParamName: "Body"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/protobufEmpty"
        403:
          description: "Returned when the user does not have permission to access\
            \ the resource."
        404:
          description: "Returned when the resource does not exist."
        418:
          description: "I'm a teapot."
          schema:
            $ref: "#/definitions/examplepbNumericEnum"
    delete:
      tags:
      - "ABitOfEverythingService"
      operationId: "Delete"
      parameters:
      - name: "uuid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Uuid"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/protobufEmpty"
        403:
          description: "Returned when the user does not have permission to access\
            \ the resource."
        404:
          description: "Returned when the resource does not exist."
        418:
          description: "I'm a teapot."
          schema:
            $ref: "#/definitions/examplepbNumericEnum"
      security:
      - ApiKeyAuth: []
        OAuth2:
        - "read"
        - "write"
  ? /v1/example/a_bit_of_everything_repeated/{path_repeated_float_value}/{path_repeated_double_value}/{path_repeated_int64_value}/{path_repeated_uint64_value}/{path_repeated_int32_value}/{path_repeated_fixed64_value}/{path_repeated_fixed32_value}/{path_repeated_bool_value}/{path_repeated_string_value}/{path_repeated_bytes_value}/{path_repeated_uint32_value}/{path_repeated_enum_value}/{path_repeated_sfixed32_value}/{path_repeated_sfixed64_value}/{path_repeated_sint32_value}/{path_repeated_sint64_value}
  : get:
      tags:
      - "ABitOfEverythingService"
      operationId: "GetRepeatedQuery"
      parameters:
      - name: "path_repeated_float_value"
        in: "path"
        description: "repeated values. they are comma-separated in path"
        required: true
        type: "array"
        items:
          type: "number"
          format: "float"
        collectionFormat: "csv"
        minItems: 1
        x-exportParamName: "PathRepeatedFloatValue"
      - name: "path_repeated_double_value"
        in: "path"
        required: true
        type: "array"
        items:
          type: "number"
          format: "double"
        collectionFormat: "csv"
        minItems: 1
        x-exportParamName: "PathRepeatedDoubleValue"
      - name: "path_repeated_int64_value"
        in: "path"
        required: true
        type: "array"
        items:
          type: "string"
          format: "int64"
        collectionFormat: "csv"
        minItems: 1
        x-exportParamName: "PathRepeatedInt64Value"
      - name: "path_repeated_uint64_value"
        in: "path"
        required: true
        type: "array"
        items:
          type: "string"
          format: "uint64"
        collectionFormat: "csv"
        minItems: 1
        x-exportParamName: "PathRepeatedUint64Value"
      - name: "path_repeated_int32_value"
        in: "path"
        required: true
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "csv"
        minItems: 1
        x-exportParamName: "PathRepeatedInt32Value"
      - name: "path_repeated_fixed64_value"
        in: "path"
        required: true
        type: "array"
        items:
          type: "string"
          format: "uint64"
        collectionFormat: "csv"
        minItems: 1
        x-exportParamName: "PathRepeatedFixed64Value"
      - name: "path_repeated_fixed32_value"
        in: "path"
        required: true
        type: "array"
        items:
          type: "integer"
          format: "int64"
        collectionFormat: "csv"
        minItems: 1
        x-exportParamName: "PathRepeatedFixed32Value"
      - name: "path_repeated_bool_value"
        in: "path"
        required: true
        type: "array"
        items:
          type: "boolean"
          format: "boolean"
        collectionFormat: "csv"
        minItems: 1
        x-exportParamName: "PathRepeatedBoolValue"
      - name: "path_repeated_string_value"
        in: "path"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        minItems: 1
        x-exportParamName: "PathRepeatedStringValue"
      - name: "path_repeated_bytes_value"
        in: "path"
        required: true
        type: "array"
        items:
          type: "string"
          format: "byte"
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
        collectionFormat: "csv"
        minItems: 1
        x-exportParamName: "PathRepeatedBytesValue"
      - name: "path_repeated_uint32_value"
        in: "path"
        required: true
        type: "array"
        items:
          type: "integer"
          format: "int64"
        collectionFormat: "csv"
        minItems: 1
        x-exportParamName: "PathRepeatedUint32Value"
      - name: "path_repeated_enum_value"
        in: "path"
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "ZERO"
          - "ONE"
        collectionFormat: "csv"
        minItems: 1
        x-exportParamName: "PathRepeatedEnumValue"
      - name: "path_repeated_sfixed32_value"
        in: "path"
        required: true
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "csv"
        minItems: 1
        x-exportParamName: "PathRepeatedSfixed32Value"
      - name: "path_repeated_sfixed64_value"
        in: "path"
        required: true
        type: "array"
        items:
          type: "string"
          format: "int64"
        collectionFormat: "csv"
        minItems: 1
        x-exportParamName: "PathRepeatedSfixed64Value"
      - name: "path_repeated_sint32_value"
        in: "path"
        required: true
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "csv"
        minItems: 1
        x-exportParamName: "PathRepeatedSint32Value"
      - name: "path_repeated_sint64_value"
        in: "path"
        required: true
        type: "array"
        items:
          type: "string"
          format: "int64"
        collectionFormat: "csv"
        minItems: 1
        x-exportParamName: "PathRepeatedSint64Value"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/examplepbABitOfEverythingRepeated"
        403:
          description: "Returned when the user does not have permission to access\
            \ the resource."
        404:
          description: "Returned when the resource does not exist."
        418:
          description: "I'm a teapot."
          schema:
            $ref: "#/definitions/examplepbNumericEnum"
  /v2/example/echo:
    get:
      tags:
      - "echo service"
      - "echo rpc"
      summary: "Summary: Echo rpc"
      description: "Description Echo"
      operationId: "Echo3"
      parameters:
      - name: "value"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Value"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/subStringMessage"
        403:
          description: "Returned when the user does not have permission to access\
            \ the resource."
        404:
          description: "Returned when the resource does not exist."
        418:
          description: "I'm a teapot."
          schema:
            $ref: "#/definitions/examplepbNumericEnum"
        503:
          description: "Returned when the resource is temporarily unavailable."
      externalDocs:
        description: "Find out more Echo"
        url: "https://github.com/grpc-ecosystem/grpc-gateway"
    post:
      tags:
      - "echo service"
      - "echo rpc"
      summary: "Summary: Echo rpc"
      description: "Description Echo"
      operationId: "Echo2"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "string"
        x-exportParamName: "Body"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/subStringMessage"
        403:
          description: "Returned when the user does not have permission to access\
            \ the resource."
        404:
          description: "Returned when the resource does not exist."
        418:
          description: "I'm a teapot."
          schema:
            $ref: "#/definitions/examplepbNumericEnum"
        503:
          description: "Returned when the resource is temporarily unavailable."
      externalDocs:
        description: "Find out more Echo"
        url: "https://github.com/grpc-ecosystem/grpc-gateway"
  /v2/example/empty:
    get:
      tags:
      - "camelCaseServiceName"
      summary: "Create a new ABitOfEverything"
      description: "This API creates a new ABitOfEverything"
      operationId: "Empty"
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/protobufEmpty"
        403:
          description: "Returned when the user does not have permission to access\
            \ the resource."
        404:
          description: "Returned when the resource does not exist."
        418:
          description: "I'm a teapot."
          schema:
            $ref: "#/definitions/examplepbNumericEnum"
  /v2/example/errorwithdetails:
    get:
      tags:
      - "ABitOfEverythingService"
      operationId: "ErrorWithDetails"
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/protobufEmpty"
        403:
          description: "Returned when the user does not have permission to access\
            \ the resource."
        404:
          description: "Returned when the resource does not exist."
        418:
          description: "I'm a teapot."
          schema:
            $ref: "#/definitions/examplepbNumericEnum"
  /v2/example/postwithemptybody/{name}:
    post:
      tags:
      - "ABitOfEverythingService"
      operationId: "PostWithEmptyBody"
      parameters:
      - name: "name"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/examplepbBody"
        x-exportParamName: "Body"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/protobufEmpty"
        403:
          description: "Returned when the user does not have permission to access\
            \ the resource."
        404:
          description: "Returned when the resource does not exist."
        418:
          description: "I'm a teapot."
          schema:
            $ref: "#/definitions/examplepbNumericEnum"
  /v2/example/timeout:
    get:
      tags:
      - "ABitOfEverythingService"
      operationId: "Timeout"
      parameters: []
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/protobufEmpty"
        403:
          description: "Returned when the user does not have permission to access\
            \ the resource."
        404:
          description: "Returned when the resource does not exist."
        418:
          description: "I'm a teapot."
          schema:
            $ref: "#/definitions/examplepbNumericEnum"
  /v2/example/withbody/{id}:
    post:
      tags:
      - "ABitOfEverythingService"
      operationId: "GetMessageWithBody"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/examplepbBody"
        x-exportParamName: "Body"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/protobufEmpty"
        403:
          description: "Returned when the user does not have permission to access\
            \ the resource."
        404:
          description: "Returned when the resource does not exist."
        418:
          description: "I'm a teapot."
          schema:
            $ref: "#/definitions/examplepbNumericEnum"
securityDefinitions:
  ApiKeyAuth:
    type: "apiKey"
    name: "X-API-Key"
    in: "header"
  BasicAuth:
    type: "basic"
  OAuth2:
    type: "oauth2"
    authorizationUrl: "https://example.com/oauth/authorize"
    tokenUrl: "https://example.com/oauth/token"
    flow: "accessCode"
    scopes:
      admin: "Grants read and write access to administrative information"
      read: "Grants read access"
      write: "Grants write access"
definitions:
  ABitOfEverythingNested:
    type: "object"
    properties:
      name:
        type: "string"
        description: "name is nested field."
      amount:
        type: "integer"
        format: "int64"
      ok:
        $ref: "#/definitions/NestedDeepEnum"
    description: "Nested is nested type."
    example:
      amount: 0
      name: "name"
      ok: {}
  MessagePathEnumNestedPathEnum:
    type: "string"
    enum:
    - "GHI"
    - "JKL"
    default: "GHI"
  NestedDeepEnum:
    type: "string"
    description: "DeepEnum is one or zero.\n\n - FALSE: FALSE is false.\n - TRUE:\
      \ TRUE is true."
    enum:
    - "FALSE"
    - "TRUE"
    default: "FALSE"
  examplepbABitOfEverything:
    type: "object"
    required:
    - "uuid"
    properties:
      single_nested:
        $ref: "#/definitions/ABitOfEverythingNested"
      uuid:
        type: "string"
        minLength: 1
        pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
      nested:
        type: "array"
        items:
          $ref: "#/definitions/ABitOfEverythingNested"
      float_value:
        type: "number"
        format: "float"
      double_value:
        type: "number"
        format: "double"
      int64_value:
        type: "string"
        format: "int64"
      uint64_value:
        type: "string"
        format: "uint64"
      int32_value:
        type: "integer"
        format: "int32"
      fixed64_value:
        type: "string"
        format: "uint64"
      fixed32_value:
        type: "integer"
        format: "int64"
      bool_value:
        type: "boolean"
        format: "boolean"
      string_value:
        type: "string"
      bytes_value:
        type: "string"
        format: "byte"
        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
      uint32_value:
        type: "integer"
        format: "int64"
      enum_value:
        $ref: "#/definitions/examplepbNumericEnum"
      path_enum_value:
        $ref: "#/definitions/pathenumPathEnum"
      nested_path_enum_value:
        $ref: "#/definitions/MessagePathEnumNestedPathEnum"
      sfixed32_value:
        type: "integer"
        format: "int32"
      sfixed64_value:
        type: "string"
        format: "int64"
      sint32_value:
        type: "integer"
        format: "int32"
      sint64_value:
        type: "string"
        format: "int64"
      repeated_string_value:
        type: "array"
        items:
          type: "string"
      oneof_empty:
        $ref: "#/definitions/protobufEmpty"
      oneof_string:
        type: "string"
      map_value:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/examplepbNumericEnum"
      mapped_string_value:
        type: "object"
        additionalProperties:
          type: "string"
      mapped_nested_value:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/ABitOfEverythingNested"
      nonConventionalNameValue:
        type: "string"
      timestamp_value:
        type: "string"
        format: "date-time"
      repeated_enum_value:
        type: "array"
        title: "repeated enum value. it is comma-separated in query"
        items:
          $ref: "#/definitions/examplepbNumericEnum"
    externalDocs:
      description: "Find out more about ABitOfEverything"
      url: "https://github.com/grpc-ecosystem/grpc-gateway"
    title: "A bit of everything"
    description: "Intentionaly complicated message type to cover many features of\
      \ Protobuf."
    example:
      uint32_value: 2
      nonConventionalNameValue: "nonConventionalNameValue"
      path_enum_value: {}
      bool_value: true
      nested_path_enum_value: {}
      sfixed32_value: 7
      bytes_value: "bytes_value"
      uuid: "uuid"
      nested:
      - amount: 0
        name: "name"
        ok: {}
      - amount: 0
        name: "name"
        ok: {}
      repeated_string_value:
      - "repeated_string_value"
      - "repeated_string_value"
      timestamp_value: "2000-01-23T04:56:07.000+00:00"
      uint64_value: "uint64_value"
      fixed32_value: 5
      mapped_nested_value:
        key:
          amount: 0
          name: "name"
          ok: {}
      fixed64_value: "fixed64_value"
      string_value: "string_value"
      repeated_enum_value:
      - null
      - null
      single_nested:
        amount: 0
        name: "name"
        ok: {}
      enum_value: {}
      mapped_string_value:
        key: "mapped_string_value"
      sint32_value: 9
      double_value: 1.4658129805029452
      int64_value: "int64_value"
      map_value:
        key: null
      sfixed64_value: "sfixed64_value"
      float_value: 6.0274563
      int32_value: 5
      sint64_value: "sint64_value"
      oneof_string: "oneof_string"
      oneof_empty: {}
  examplepbABitOfEverythingRepeated:
    type: "object"
    properties:
      path_repeated_float_value:
        type: "array"
        title: "repeated values. they are comma-separated in path"
        items:
          type: "number"
          format: "float"
      path_repeated_double_value:
        type: "array"
        items:
          type: "number"
          format: "double"
      path_repeated_int64_value:
        type: "array"
        items:
          type: "string"
          format: "int64"
      path_repeated_uint64_value:
        type: "array"
        items:
          type: "string"
          format: "uint64"
      path_repeated_int32_value:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      path_repeated_fixed64_value:
        type: "array"
        items:
          type: "string"
          format: "uint64"
      path_repeated_fixed32_value:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      path_repeated_bool_value:
        type: "array"
        items:
          type: "boolean"
          format: "boolean"
      path_repeated_string_value:
        type: "array"
        items:
          type: "string"
      path_repeated_bytes_value:
        type: "array"
        items:
          type: "string"
          format: "byte"
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
      path_repeated_uint32_value:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      path_repeated_enum_value:
        type: "array"
        items:
          $ref: "#/definitions/examplepbNumericEnum"
      path_repeated_sfixed32_value:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      path_repeated_sfixed64_value:
        type: "array"
        items:
          type: "string"
          format: "int64"
      path_repeated_sint32_value:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      path_repeated_sint64_value:
        type: "array"
        items:
          type: "string"
          format: "int64"
    title: "ABitOfEverythingRepeated is used to validate repeated path parameter functionality"
    example:
      path_repeated_uint64_value:
      - "path_repeated_uint64_value"
      - "path_repeated_uint64_value"
      path_repeated_sint32_value:
      - 7
      - 7
      path_repeated_int32_value:
      - 1
      - 1
      path_repeated_fixed64_value:
      - "path_repeated_fixed64_value"
      - "path_repeated_fixed64_value"
      path_repeated_double_value:
      - 6.027456183070403
      - 6.027456183070403
      path_repeated_sfixed64_value:
      - "path_repeated_sfixed64_value"
      - "path_repeated_sfixed64_value"
      path_repeated_float_value:
      - 0.8008282
      - 0.8008282
      path_repeated_fixed32_value:
      - 5
      - 5
      path_repeated_int64_value:
      - "path_repeated_int64_value"
      - "path_repeated_int64_value"
      path_repeated_uint32_value:
      - 5
      - 5
      path_repeated_bytes_value:
      - "path_repeated_bytes_value"
      - "path_repeated_bytes_value"
      path_repeated_sint64_value:
      - "path_repeated_sint64_value"
      - "path_repeated_sint64_value"
      path_repeated_bool_value:
      - true
      - true
      path_repeated_string_value:
      - "path_repeated_string_value"
      - "path_repeated_string_value"
      path_repeated_enum_value:
      - {}
      - {}
      path_repeated_sfixed32_value:
      - 2
      - 2
  examplepbBody:
    type: "object"
    properties:
      name:
        type: "string"
  examplepbNumericEnum:
    type: "string"
    description: "NumericEnum is one or zero.\n\n - ZERO: ZERO means 0\n - ONE: ONE\
      \ means 1"
    enum:
    - "ZERO"
    - "ONE"
    default: "ZERO"
  pathenumPathEnum:
    type: "string"
    enum:
    - "ABC"
    - "DEF"
    default: "ABC"
  protobufEmpty:
    type: "object"
    title: "A generic empty message that you can re-use to avoid defining duplicated\n\
      empty messages in your APIs. A typical example is to use it as the request\n\
      or the response type of an API method. For instance:"
    description: "service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n\
      \    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`."
  subStringMessage:
    type: "object"
    properties:
      value:
        type: "string"
    example:
      value: "value"
externalDocs:
  description: "More about gRPC-Gateway"
  url: "https://github.com/grpc-ecosystem/grpc-gateway"
