// Code generated by protoc-gen-go.
// source: examples/examplepb/a_bit_of_everything_proto2.proto
// DO NOT EDIT!

package examplepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ABitOfEverythingProto2 struct {
	Uuid         *string                          `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Nested       []*ABitOfEverythingProto2_Nested `protobuf:"bytes,2,rep,name=nested" json:"nested,omitempty"`
	FloatValue   *float32                         `protobuf:"fixed32,3,opt,name=float_value" json:"float_value,omitempty"`
	DoubleValue  *float64                         `protobuf:"fixed64,4,opt,name=double_value" json:"double_value,omitempty"`
	Int64Value   *int64                           `protobuf:"varint,5,opt,name=int64_value" json:"int64_value,omitempty"`
	Uint64Value  *uint64                          `protobuf:"varint,6,opt,name=uint64_value" json:"uint64_value,omitempty"`
	Int32Value   *int32                           `protobuf:"varint,7,opt,name=int32_value" json:"int32_value,omitempty"`
	Fixed64Value *uint64                          `protobuf:"fixed64,8,opt,name=fixed64_value" json:"fixed64_value,omitempty"`
	Fixed32Value *uint32                          `protobuf:"fixed32,9,opt,name=fixed32_value" json:"fixed32_value,omitempty"`
	BoolValue    *bool                            `protobuf:"varint,10,opt,name=bool_value" json:"bool_value,omitempty"`
	StringValue  *string                          `protobuf:"bytes,11,opt,name=string_value" json:"string_value,omitempty"`
	BytesValue   []byte                           `protobuf:"bytes,12,opt,name=bytes_value" json:"bytes_value,omitempty"`
	Uint32Value  *uint32                          `protobuf:"varint,13,opt,name=uint32_value" json:"uint32_value,omitempty"`
	// TODO(yugui) add enum_value
	Sfixed32Value    *int32 `protobuf:"fixed32,15,opt,name=sfixed32_value" json:"sfixed32_value,omitempty"`
	Sfixed64Value    *int64 `protobuf:"fixed64,16,opt,name=sfixed64_value" json:"sfixed64_value,omitempty"`
	Sint32Value      *int32 `protobuf:"zigzag32,17,opt,name=sint32_value" json:"sint32_value,omitempty"`
	Sint64Value      *int64 `protobuf:"zigzag64,18,opt,name=sint64_value" json:"sint64_value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ABitOfEverythingProto2) Reset()                    { *m = ABitOfEverythingProto2{} }
func (m *ABitOfEverythingProto2) String() string            { return proto.CompactTextString(m) }
func (*ABitOfEverythingProto2) ProtoMessage()               {}
func (*ABitOfEverythingProto2) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *ABitOfEverythingProto2) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *ABitOfEverythingProto2) GetNested() []*ABitOfEverythingProto2_Nested {
	if m != nil {
		return m.Nested
	}
	return nil
}

func (m *ABitOfEverythingProto2) GetFloatValue() float32 {
	if m != nil && m.FloatValue != nil {
		return *m.FloatValue
	}
	return 0
}

func (m *ABitOfEverythingProto2) GetDoubleValue() float64 {
	if m != nil && m.DoubleValue != nil {
		return *m.DoubleValue
	}
	return 0
}

func (m *ABitOfEverythingProto2) GetInt64Value() int64 {
	if m != nil && m.Int64Value != nil {
		return *m.Int64Value
	}
	return 0
}

func (m *ABitOfEverythingProto2) GetUint64Value() uint64 {
	if m != nil && m.Uint64Value != nil {
		return *m.Uint64Value
	}
	return 0
}

func (m *ABitOfEverythingProto2) GetInt32Value() int32 {
	if m != nil && m.Int32Value != nil {
		return *m.Int32Value
	}
	return 0
}

func (m *ABitOfEverythingProto2) GetFixed64Value() uint64 {
	if m != nil && m.Fixed64Value != nil {
		return *m.Fixed64Value
	}
	return 0
}

func (m *ABitOfEverythingProto2) GetFixed32Value() uint32 {
	if m != nil && m.Fixed32Value != nil {
		return *m.Fixed32Value
	}
	return 0
}

func (m *ABitOfEverythingProto2) GetBoolValue() bool {
	if m != nil && m.BoolValue != nil {
		return *m.BoolValue
	}
	return false
}

func (m *ABitOfEverythingProto2) GetStringValue() string {
	if m != nil && m.StringValue != nil {
		return *m.StringValue
	}
	return ""
}

func (m *ABitOfEverythingProto2) GetBytesValue() []byte {
	if m != nil {
		return m.BytesValue
	}
	return nil
}

func (m *ABitOfEverythingProto2) GetUint32Value() uint32 {
	if m != nil && m.Uint32Value != nil {
		return *m.Uint32Value
	}
	return 0
}

func (m *ABitOfEverythingProto2) GetSfixed32Value() int32 {
	if m != nil && m.Sfixed32Value != nil {
		return *m.Sfixed32Value
	}
	return 0
}

func (m *ABitOfEverythingProto2) GetSfixed64Value() int64 {
	if m != nil && m.Sfixed64Value != nil {
		return *m.Sfixed64Value
	}
	return 0
}

func (m *ABitOfEverythingProto2) GetSint32Value() int32 {
	if m != nil && m.Sint32Value != nil {
		return *m.Sint32Value
	}
	return 0
}

func (m *ABitOfEverythingProto2) GetSint64Value() int64 {
	if m != nil && m.Sint64Value != nil {
		return *m.Sint64Value
	}
	return 0
}

type ABitOfEverythingProto2_Nested struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Amount           *uint32 `protobuf:"varint,2,req,name=amount" json:"amount,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ABitOfEverythingProto2_Nested) Reset()         { *m = ABitOfEverythingProto2_Nested{} }
func (m *ABitOfEverythingProto2_Nested) String() string { return proto.CompactTextString(m) }
func (*ABitOfEverythingProto2_Nested) ProtoMessage()    {}
func (*ABitOfEverythingProto2_Nested) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{0, 0}
}

func (m *ABitOfEverythingProto2_Nested) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ABitOfEverythingProto2_Nested) GetAmount() uint32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func init() {
	proto.RegisterType((*ABitOfEverythingProto2)(nil), "gengo.grpc.gateway.examples.examplepb.ABitOfEverythingProto2")
	proto.RegisterType((*ABitOfEverythingProto2_Nested)(nil), "gengo.grpc.gateway.examples.examplepb.ABitOfEverythingProto2.Nested")
}

var fileDescriptor2 = []byte{
	// 432 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x92, 0xcf, 0x6b, 0xdb, 0x30,
	0x14, 0xc7, 0xc9, 0x2f, 0xb7, 0x79, 0x4e, 0xd6, 0x56, 0x87, 0x12, 0xca, 0xc6, 0xba, 0x8d, 0x42,
	0x4f, 0x0a, 0x24, 0x65, 0xf7, 0x95, 0xed, 0xba, 0x0d, 0x1d, 0x76, 0x18, 0x03, 0x23, 0x2f, 0xb2,
	0x27, 0x70, 0x24, 0x63, 0xc9, 0x5d, 0xf3, 0x47, 0xee, 0x7f, 0xda, 0xb3, 0x24, 0x0b, 0x1b, 0x76,
	0xd8, 0x29, 0xca, 0x97, 0x0f, 0x9f, 0xf7, 0x95, 0xf5, 0x60, 0x2f, 0x9e, 0xf9, 0xb1, 0xae, 0x84,
	0xd9, 0x86, 0x43, 0x9d, 0x6f, 0x79, 0x96, 0x4b, 0x9b, 0xe9, 0x22, 0x13, 0x4f, 0xa2, 0x39, 0xd9,
	0x5f, 0x52, 0x95, 0x59, 0xdd, 0x68, 0xab, 0x77, 0xd4, 0xfd, 0x90, 0xbb, 0x52, 0xa8, 0x52, 0xd3,
	0xb2, 0xa9, 0x7f, 0xd2, 0x92, 0x5b, 0xf1, 0x9b, 0x9f, 0x68, 0xef, 0xa1, 0xd1, 0x73, 0xf3, 0xb2,
	0xd4, 0xba, 0xac, 0xc4, 0x96, 0xd7, 0x72, 0xcb, 0x95, 0xd2, 0x96, 0x5b, 0xa9, 0x95, 0xf1, 0x92,
	0xb7, 0x7f, 0x16, 0x70, 0xfd, 0xe1, 0x51, 0xda, 0x2f, 0xc5, 0xa7, 0x38, 0xe6, 0xab, 0x9b, 0x42,
	0x08, 0xcc, 0xdb, 0x56, 0x1e, 0x36, 0x93, 0xdb, 0xc9, 0xfd, 0x92, 0xb9, 0x33, 0xf9, 0x01, 0x89,
	0x12, 0xc6, 0x8a, 0xc3, 0x66, 0x7a, 0x3b, 0xbb, 0x4f, 0x77, 0x1f, 0xe9, 0x7f, 0x95, 0xa0, 0xff,
	0x1e, 0x41, 0x3f, 0x3b, 0x17, 0x0b, 0x4e, 0xf2, 0x1a, 0xd2, 0xa2, 0xd2, 0xdc, 0x66, 0x4f, 0xbc,
	0x6a, 0xc5, 0x66, 0x86, 0x83, 0xa7, 0x0c, 0x5c, 0xf4, 0xad, 0x4b, 0xc8, 0x1b, 0x58, 0x1d, 0x74,
	0x9b, 0x57, 0x22, 0x10, 0x73, 0x24, 0x26, 0x2c, 0xf5, 0x99, 0x47, 0xd0, 0x21, 0x95, 0x7d, 0xff,
	0x10, 0x88, 0x05, 0x12, 0x33, 0x06, 0x2e, 0x8a, 0x8e, 0x76, 0x48, 0x24, 0x48, 0xcc, 0x59, 0xda,
	0x0e, 0x10, 0xef, 0xd8, 0xef, 0x02, 0x71, 0x86, 0xc4, 0xc2, 0x39, 0xf6, 0x3b, 0x0f, 0xbc, 0x83,
	0x75, 0x21, 0x9f, 0xc5, 0x21, 0x4a, 0xce, 0x11, 0x49, 0xd8, 0x2a, 0x84, 0x63, 0x28, 0x7a, 0x96,
	0x08, 0x9d, 0x05, 0xa8, 0x37, 0xbd, 0x02, 0xc8, 0xb5, 0xae, 0x02, 0x01, 0x48, 0x9c, 0xb3, 0x65,
	0x97, 0xc4, 0xb2, 0xc6, 0x36, 0xdd, 0xd3, 0x7b, 0x20, 0x75, 0x6f, 0x91, 0xfa, 0x2c, 0x96, 0xcd,
	0x4f, 0x56, 0x98, 0x40, 0xac, 0x90, 0x58, 0x31, 0x70, 0xd1, 0xe8, 0xc2, 0xb1, 0xc6, 0x1a, 0x89,
	0xb5, 0xbf, 0x70, 0xdf, 0xe2, 0x0e, 0x5e, 0x98, 0x71, 0xd7, 0x0b, 0x84, 0x2e, 0xd8, 0xda, 0x8c,
	0xca, 0x46, 0x2c, 0xde, 0xfb, 0x12, 0xb1, 0xcb, 0x1e, 0x1b, 0x7c, 0x61, 0x33, 0x1c, 0x78, 0x85,
	0xd0, 0x15, 0x96, 0x1e, 0x0c, 0x0c, 0x48, 0xf4, 0x10, 0x44, 0x88, 0x47, 0x82, 0xe5, 0xe6, 0x01,
	0x12, 0xbf, 0x1e, 0xdd, 0x22, 0x2a, 0x7e, 0x14, 0xb8, 0x88, 0xd3, 0x6e, 0x11, 0xbb, 0x33, 0xb9,
	0x86, 0x84, 0x1f, 0x75, 0xab, 0x2c, 0x2e, 0xe2, 0x14, 0xaf, 0x13, 0xfe, 0x3d, 0xa6, 0xdf, 0x97,
	0x71, 0xeb, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0xd2, 0x64, 0x53, 0xcc, 0x57, 0x03, 0x00, 0x00,
}
