load("@io_bazel_rules_go//go:def.bzl", "go_library")

package(default_visibility = ["//visibility:public"])

# TODO(yannic): Add examples/tests that use import_prefix/strip_import_prefix.

# gazelle:exclude openapi_merge_a.proto
# gazelle:exclude openapi_merge_b.proto
# gazelle:go_grpc_compilers //:go_apiv2, //:go_grpc, //protoc-gen-grpc-gateway:go_gen_grpc_gateway

genrule(
    name = "generated_proto",
    srcs = ["generated_input.proto"],
    outs = ["generated_output.proto"],
    cmd = "cp $< $@",  # A simple copy simulates a generated proto file.
)

go_library(
    name = "go_default_library",
    srcs = [
        "a_bit_of_everything.pb.go",
        "a_bit_of_everything.pb.gw.go",
        "a_bit_of_everything_grpc.pb.go",
        "echo_service.pb.go",
        "echo_service.pb.gw.go",
        "echo_service_grpc.pb.go",
        "flow_combination.pb.go",
        "flow_combination.pb.gw.go",
        "flow_combination_grpc.pb.go",
        "generate_unbound_methods.pb.go",
        "generate_unbound_methods.pb.gw.go",
        "generate_unbound_methods_grpc.pb.go",
        "non_standard_names.pb.go",
        "non_standard_names.pb.gw.go",
        "non_standard_names_grpc.pb.go",
        "response_body_service.pb.go",
        "response_body_service.pb.gw.go",
        "response_body_service_grpc.pb.go",
        "stream.pb.go",
        "stream.pb.gw.go",
        "stream_grpc.pb.go",
        "unannotated_echo_service.pb.go",
        "unannotated_echo_service.pb.gw.go",
        "unannotated_echo_service_grpc.pb.go",
        "use_go_template.pb.go",
        "use_go_template.pb.gw.go",
        "use_go_template_grpc.pb.go",
        "wrappers.pb.go",
        "wrappers.pb.gw.go",
        "wrappers_grpc.pb.go",
    ],
    importpath = "github.com/grpc-ecosystem/grpc-gateway/v2/examples/internal/proto/examplepb",
    deps = [
        "//examples/internal/proto/pathenum:go_default_library",
        "//examples/internal/proto/sub:go_default_library",
        "//examples/internal/proto/sub2:go_default_library",
        "//protoc-gen-openapiv2/options:go_default_library",
        "//runtime:go_default_library",
        "//utilities:go_default_library",
        "@com_github_golang_protobuf//proto:go_default_library",
        "@com_github_golang_protobuf//ptypes/duration:go_default_library",
        "@com_github_golang_protobuf//ptypes/empty:go_default_library",
        "@com_github_golang_protobuf//ptypes/struct:go_default_library",
        "@com_github_golang_protobuf//ptypes/timestamp:go_default_library",
        "@com_github_golang_protobuf//ptypes/wrappers:go_default_library",
        "@org_golang_google_genproto//googleapis/api/annotations:go_default_library",
        "@org_golang_google_genproto//googleapis/api/httpbody:go_default_library",
        "@org_golang_google_genproto//googleapis/rpc/status:go_default_library",
        "@org_golang_google_genproto//protobuf/field_mask:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes:go_default_library",
        "@org_golang_google_grpc//grpclog:go_default_library",
        "@org_golang_google_grpc//metadata:go_default_library",
        "@org_golang_google_grpc//status:go_default_library",
        "@org_golang_google_protobuf//proto:go_default_library",
        "@org_golang_google_protobuf//reflect/protoreflect:go_default_library",
        "@org_golang_google_protobuf//runtime/protoimpl:go_default_library",
    ],
)

# protoc_gen_openapiv2(
#     name = "examplepb_protoc_gen_openapiv2",
#     proto = ":examplepb_proto",
# )

# protoc_gen_openapiv2(
#     name = "examplepb_protoc_gen_openapiv2_merged",
#     proto = ":examplepb_proto",
#     single_output = True,  # Outputs a single swagger.json file.
# )

# protoc_gen_openapiv2(
#     name = "examplepb_openapi_merge",
#     proto = ":openapi_merge_proto",
#     single_output = True,  # Outputs a single swagger.json file.
# )
